import type { NextPage } from "next";
import Head from "next/head";
// import { signIn, signOut, useSession } from "next-auth/react";
// import { trpc } from "../utils/trpc";
import Image from "next/future/image";
import { useState } from "react";

import Location from "../../public/svg/location.svg";
import Search from "../../public/svg/search.svg";
import User from "../../public/svg/user.svg";
import ComboBox, { type Options } from "../UI/ComboBox";
import ListBox from "../UI/ListBox";

export type Form = {
  location: Options | undefined;
  guests: Options | undefined;
};

const locationOptions = [
  { id: 1, name: "Location", value: "" },
  { id: 2, name: "Arizona", value: "arizona" },
  { id: 3, name: "California", value: "california" },
  { id: 4, name: "New York", value: "new york" },
  { id: 5, name: "Texas", value: "texas" },
  { id: 6, name: "Washington", value: "washington" },
];
const guestsOptions = [
  { id: 1, name: "Number of guests", value: "" },
  { id: 2, name: "1", value: "0-1" },
  { id: 3, name: "2", value: "0-2" },
  { id: 4, name: "3 to 4", value: "3-4" },
  { id: 5, name: "4 to 5", value: "4-5" },
  { id: 6, name: "5 to 10", value: "5-10" },
  { id: 7, name: "10 or more", value: "10-100" },
];

const Home: NextPage = () => {
  const [form, setForm] = useState({
    location: locationOptions[0],
    guests: guestsOptions[0],
  });
  console.log(form);
  // const hello = trpc.example.hello.useQuery({ text: "from tRPC" });
  return (
    <>
      <Head>
        <title>Estates</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="relative mt-10">
        <Image
          src="/images/home-main.jpg"
          alt="Estate"
          width={1280}
          height={500}
          priority
          className="absolute top-0 left-0 block h-full rounded-40 object-cover"
        />
        <div className="relative z-10 p-[30px] pt-[60px]">
          <h1 className="text-2xl font-bold text-white">
            Find your perfect space!
          </h1>
          <p className="mt-2.5 text-md font-normal leading-relaxed text-grey-light">
            Discover & Book unique spaces for your upcoming activity.
          </p>
          <div className="relative mt-10 space-y-5 rounded-40 bg-white p-6 pt-10">
            <ComboBox
              options={locationOptions}
              name="location"
              setForm={setForm}
              value={form.location as Options}
            >
              <Location className="mr-2.5 -mt-1" />
            </ComboBox>
            <ListBox
              options={guestsOptions}
              name="guests"
              setForm={setForm}
              value={form.guests as Options}
            >
              <User className="mr-2.5 -mt-0.5 h-[22px] w-[22px] fill-grey" />
            </ListBox>
            <button className="btn-primary w-full justify-center">
              <Search />
              Search
            </button>
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;

// const AuthShowcase: React.FC = () => {
//   const { data: secretMessage } = trpc.auth.getSecretMessage.useQuery();

//   const { data: sessionData } = useSession();

//   return (
//     <div className="flex flex-col items-center justify-center gap-2">
//       {sessionData && (
//         <p className="text-2xl text-blue-500">
//           Logged in as {sessionData?.user?.name}
//         </p>
//       )}
//       {secretMessage && (
//         <p className="text-2xl text-blue-500">{secretMessage}</p>
//       )}
//       <button
//         className="border-black bg-violet-50 hover:bg-violet-100 shadow-lg' rounded-md border px-4 py-2 text-xl"
//         onClick={sessionData ? () => signOut() : () => signIn()}
//       >
//         {sessionData ? "Sign out" : "Sign in"}
//       </button>
//     </div>
//   );
// };

// type TechnologyCardProps = {
//   name: string;
//   description: string;
//   documentation: string;
// };

// const TechnologyCard = ({
//   name,
//   description,
//   documentation,
// }: TechnologyCardProps) => {
//   return (
//     <section className="border-gray-500 flex flex-col justify-center rounded border-2 p-6 shadow-xl duration-500 motion-safe:hover:scale-105">
//       <h2 className="text-gray-700 text-lg">{name}</h2>
//       <p className="text-gray-600 text-sm">{description}</p>
//       <a
//         className="text-violet-500 mt-3 text-sm underline decoration-dotted underline-offset-2"
//         href={documentation}
//         target="_blank"
//         rel="noreferrer"
//       >
//         Documentation
//       </a>
//     </section>
//   );
// };
